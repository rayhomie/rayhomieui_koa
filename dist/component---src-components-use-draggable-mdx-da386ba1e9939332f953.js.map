{"version":3,"sources":["webpack:///../src/components/useDraggable.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useDraggable","Ref","MouseDown","MouseMove","MouseUp","ref","onMouseDown","onMouseUp","onMouseMove","style","width","height","background","position","zIndex","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,iNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,gBADR,gBAGA,kBACE,GAAM,MADR,MAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,iBADZ,SAIL,kBACE,GAAM,MADR,MAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,kTAcL,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,oXAAyXC,SAAO,GACjaL,QACAH,kBACAS,eACAC,kBAJia,gBAKjaV,IALia,EAMjaH,eANia,GAOhaO,QAAQ,eACZ,WACK,MAKIM,cAJFC,EADF,EACEA,IACAC,EAFF,EAEEA,UACAC,EAHF,EAGEA,UACAC,EAJF,EAIEA,QAEF,OAAO,mBAAKC,IAAKJ,EAAKK,YAAaJ,EAAWK,UAAWH,EAASI,YAAaL,EAAWM,MAAO,CAC/FC,MAAO,IACPC,OAAQ,IACRC,WAAY,UACZC,SAAU,WACVC,OAAQ,e,+MAQlBvB,EAAWwB,gBAAiB","file":"component---src-components-use-draggable-mdx-da386ba1e9939332f953.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mac/Desktop/react_project/rayhomieui/rayhomieui-doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { useDraggable } from \"./useDraggable.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"usedraggable\"\n    }}>{`useDraggable`}</h1>\n    <h2 {...{\n      \"id\": \"描述\"\n    }}>{`描述`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`拖拽\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"类型\"\n    }}>{`类型`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`interface Res {\n  Ref: React.ReactElement;\n  MouseDown: (e: React.MouseEvent) => void;\n  MouseMove: (e: React.MouseEvent) => void;\n  MouseUp: (e: React.MouseEvent) => void;\n}\n\nuseDraggable:() =>  Res\n\nRef、MouseDown、MouseMove、MouseUp需要绑定在拖拽的元素上；\n需要提前在拖拽元素上设置style={{ position: \"absolute\" }}\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"基础用法\"\n    }}>{`基础用法`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const { Ref, MouseDown, MouseMove, MouseUp } = useDraggable()\\n  return (\\n    <div\\n      ref={Ref}\\n      onMouseDown={MouseDown}\\n      onMouseUp={MouseUp}\\n      onMouseMove={MouseMove}\\n      style={{\\n        width: 100,\\n        height: 100,\\n        background: \\'#0d6efd\\',\\n        position: \\'absolute\\',\\n        zIndex: 99,\\n      }}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useDraggable,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const {\n          Ref,\n          MouseDown,\n          MouseMove,\n          MouseUp\n        } = useDraggable();\n        return <div ref={Ref} onMouseDown={MouseDown} onMouseUp={MouseUp} onMouseMove={MouseMove} style={{\n          width: 100,\n          height: 100,\n          background: \"#0d6efd\",\n          position: \"absolute\",\n          zIndex: 99\n        }} />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}