{"version":3,"sources":["webpack:///../src/components/useClickOutside.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","useClickOutside","React","value","setValue","divRef","ref","onClick","style","width","height","background","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,oNAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,mBADR,mBAGA,kBACE,GAAM,MADR,MAGA,uBAAK,oBAAMC,WAAW,MAClB,UAAa,iBADZ,mCAIL,kBACE,GAAM,MADR,MAGA,uBAAK,oBAAMA,WAAW,MAClB,UAAa,eADZ,mFAML,kBACE,GAAM,QADR,QAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,2VAAoWC,SAAO,GAC5YL,QACAH,kBACAS,eACAC,qBAJ4Y,gBAK5YV,IAL4Y,EAM5YH,eAN4Y,GAO3YO,QAAQ,eACR,WACC,MAA0BO,WAAe,MAAlCC,EAAP,KAAcC,EAAd,KACMC,EAASH,SAAa,MAE5B,OADAD,YAAgBI,GAAQ,kBAAMD,EAAS,gBAChC,mBAAKE,IAAKD,EAAQE,QAAS,kBAAMH,EAAS,cAAcI,MAAO,CACpEC,MAAO,IACPC,OAAQ,GACRC,WAAY,YAEnBR,Y,kNAQHX,EAAWoB,gBAAiB","file":"component---src-components-use-click-outside-mdx-7035aca6303818c21e00.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/mac/Desktop/react_project/rayhomieui/rayhomieui-doc/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from \"docz\";\nimport { useClickOutside } from \"./useClickOutside.tsx\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"useclickoutside\"\n    }}>{`useClickOutside`}</h1>\n    <h2 {...{\n      \"id\": \"描述\"\n    }}>{`描述`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`传入元素的ref，点击元素以外的部分触发hanler函数\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"类型\"\n    }}>{`类型`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-ts\"\n      }}>{`\nuseClickOutside:(ref: RefObject<HTMLElement>, handler: Function) => void\n\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"基础用法\"\n    }}>{`基础用法`}</h2>\n    <Playground __position={0} __code={'() => {\\n  const [value, setValue] = React.useState(\\'点击\\')\\n  const divRef = React.useRef(null)\\n  useClickOutside(divRef, () => setValue(\\'点击了div的外部\\'))\\n  return (\\n    <div\\n      ref={divRef}\\n      onClick={() => setValue(\\'点击了div的内部\\')}\\n      style={{ width: 160, height: 30, background: \\'#0d6efd\\' }}\\n    >\\n      {value}\\n    </div>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      useClickOutside,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n      {() => {\n        const [value, setValue] = React.useState('点击');\n        const divRef = React.useRef(null);\n        useClickOutside(divRef, () => setValue('点击了div的外部'));\n        return <div ref={divRef} onClick={() => setValue('点击了div的内部')} style={{\n          width: 160,\n          height: 30,\n          background: \"#0d6efd\"\n        }}>\n  {value}\n  </div>;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}